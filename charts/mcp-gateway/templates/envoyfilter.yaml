{{- if .Values.envoyFilter.create }}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: mcp-ext-proc
  namespace: {{ .Values.envoyFilter.namespace }}
  labels:
    {{- include "mcp-gateway.labels" . | nindent 4 }}
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          portNumber: 8080
          filterChain:
            filter:
              name: 'envoy.filters.network.http_connection_manager'
              subFilter:
                name: 'envoy.filters.http.router'
      patch:
        operation: INSERT_FIRST
        value:
          name: envoy.filters.http.ext_proc
          typed_config:
            '@type': 'type.googleapis.com/envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor'
            failure_mode_allow: false
            mutation_rules:
              allow_all_routing: true
            message_timeout: 10s
            processing_mode:
              request_header_mode: 'SEND'
              response_header_mode: 'SEND'
              request_body_mode: 'BUFFERED'
              response_body_mode: 'BUFFERED'
              request_trailer_mode: 'SKIP'
              response_trailer_mode: 'SKIP'
            grpc_service:
              envoy_grpc:
                cluster_name: outbound|50051||{{ include "mcp-gateway.fullname" . }}-broker.{{ include "mcp-gateway.namespace" . }}.svc.cluster.local
{{- end }}
