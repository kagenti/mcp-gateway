1. Check the status of your deployment:
  kubectl get pods -n {{ include "mcp-gateway.namespace" . }} -l "app.kubernetes.io/instance={{ .Release.Name }}"

{{- if .Values.envoyFilter.create }}
2. Verify EnvoyFilter is installed:
  kubectl get envoyfilter mcp-ext-proc -n {{ .Values.envoyFilter.namespace }}
{{- end }}

3. Configure your Gateway with an MCP listener:
  Add this listener to your Gateway resource:

  spec:
    listeners:
      - name: mcp
        hostname: 'mcp.127-0-0-1.sslip.io'
        port: 8080
        protocol: HTTP
        allowedRoutes:
          namespaces:
            from: All

4. Create an HTTPRoute to route traffic to the MCP broker:
  kubectl apply -f - <<EOF
  apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    name: mcp-route
    namespace: {{ include "mcp-gateway.namespace" . }}
  spec:
    parentRefs:
      - name: mcp-gateway  # Your Gateway name
        namespace: gateway-system  # Your Gateway namespace
    hostnames:
      - 'mcp.127-0-0-1.sslip.io'  # Match the Gateway listener hostname
    rules:
      - matches:
          - path:
              type: PathPrefix
              value: /mcp
        filters:
          - type: ResponseHeaderModifier
            responseHeaderModifier:
              add:
                - name: Access-Control-Allow-Origin
                  value: "*"
                - name: Access-Control-Allow-Methods
                  value: "GET, POST, PUT, DELETE, OPTIONS, HEAD"
                - name: Access-Control-Allow-Headers
                  value: "Content-Type, Authorization, Accept, Origin, X-Requested-With"
                - name: Access-Control-Max-Age
                  value: "3600"
                - name: Access-Control-Allow-Credentials
                  value: "true"
        backendRefs:
          - name: {{ include "mcp-gateway.fullname" . }}-broker
            port: 8080
      - matches:
          - path:
              type: PathPrefix
              value: /.well-known/oauth-protected-resource
        backendRefs:
          - name: {{ include "mcp-gateway.fullname" . }}-broker
            port: 8080
  EOF

5. Connect MCP servers by creating MCPServer resources:
  kubectl apply -f - <<EOF
  apiVersion: mcp.kagenti.com/v1alpha1
  kind: MCPServer
  metadata:
    name: my-mcp-server
    namespace: {{ include "mcp-gateway.namespace" . }}
  spec:
    toolPrefix: "myserver_"
    targetRef:
      group: "gateway.networking.k8s.io"
      kind: "HTTPRoute"
      name: "my-server-route"
  EOF

6. Access your MCP Gateway at: http://mcp.127-0-0-1.sslip.io:8080/mcp
   (Adjust hostname/port based on your Gateway configuration)

7. View logs for troubleshooting:
  # Broker/Router logs
  kubectl logs -n {{ include "mcp-gateway.namespace" . }} deployment/{{ include "mcp-gateway.fullname" . }}-broker-router
  
  # Controller logs  
  kubectl logs -n {{ include "mcp-gateway.namespace" . }} deployment/{{ include "mcp-gateway.fullname" . }}-controller

For more information, visit: https://github.com/kagenti/mcp-gateway
